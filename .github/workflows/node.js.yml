# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5433:5432

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Dependency
      run: |
        cd project
        npm ci
      # working-directory: project
    
    # - name: Build
    #   run: npm run build --if-present
      # working-directory: project
    
    - name: init DB
      working-directory: project
      run: |
        cd project
        npx sequelize-cli db:create --env test
        npx sequelize-cli db:migrate --env test
        npx sequelize-cli db:seed:all --env test
    - name: testing
      working-directory: project
      run: |
        cd project
        npm run docker_test
      env:
        DOCKER_TEST_USER: postgres
        DOCKER_TEST_PASSWORD: postgres
        DOCKER_TEST_HOST: postgres
        DOCKER_TEST_DB: w11-test

